import re

def format_timestamp(milliseconds):
    """
    将毫秒转换为 [mm:ss.xx] 格式的LRC时间戳
    """
    total_seconds = milliseconds // 1000
    ms = (milliseconds % 1000) // 10
    minutes = total_seconds // 60
    seconds = total_seconds % 60
    return f"[{minutes:02}:{seconds:02}.{ms:02}]"

def generate_lrc_content(timestamps, texts):
    """
    根据时间戳和文本列表生成完整的LRC文件内容
    :param timestamps: 毫秒时间戳列表 (开始时间)
    :param texts: 对应的文本行列表
    :return: 格式化的LRC字符串
    """
    if len(timestamps) != len(texts):
        raise ValueError("时间戳和文本列表的长度不匹配")

    lrc_lines = []
    # 添加一些元数据 (可选)
    lrc_lines.append("[ar:Generated by BaiTTS CLI]")
    lrc_lines.append("[al:Audio Transcription]")
    lrc_lines.append("[ti:Converted Text]")
    lrc_lines.append("")

    for ts, txt in zip(timestamps, texts):
        # --- 优化点 1 START ---
        # 使用正则表达式移除所有 [[...]] 形式的标记, 使歌词更干净
        # 这会同时处理黑名单标记和 [[PAUSE:1000]] 这样的指令
        clean_text = re.sub(r'\[\[.*?\]\]', '', txt).strip()
        # --- 优化点 1 END ---

        if clean_text:
            lrc_line = f"{format_timestamp(ts)}{clean_text}"
            lrc_lines.append(lrc_line)
            
    return "\n".join(lrc_lines)
